/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import java.util.Map;
import java.util.HashMap;
import spark.ModelAndView;
import spark.template.velocity.VelocityTemplateEngine;
import static spark.Spark.*;
public class App {
public static void main(String[] args) {
        staticFileLocation("/public");
        String layout="templates/layout.vtl";

        get("/", (request, response) -> {
                    Map<String, Object> model = new HashMap<String, Object>();
                    model.put("template", "templates/index.vtl");
                    return new ModelAndView(model, layout);
            }, new VelocityTemplateEngine());

        get("/sightings/new", (request,response) ->{
                    Map<String, Object> model = new HashMap<String, Object>();
                    model.put("template","templates/sighting-form.vtl");
                    return new ModelAndView(model,layout);
            },new VelocityTemplateEngine());

        post("/sightings", (request,response) ->{
                     Map<String, Object> model = new HashMap<String, Object>();
                     String name=request.queryParams("name");
                     String location=request.queryParams("location");
                     String time=request.queryParams("time");
                     Sighting newSighting=new Sighting(name,location,time);
                     model.put("template","/templates/success.vtl");
                     return new ModelAndView(model,layout);
             },new VelocityTemplateEngine());

        get("/sightings", (request,response) ->{
                    Map<String, Object> model = new HashMap<String, Object>();
                    model.put("sightings", Sighting.all());
                    model.put("template","templates/sightings.vtl");
                    return new ModelAndView(model,layout);

            },new VelocityTemplateEngine());

        get("sightings/:id", (request,response)-> {
                    Map<String, Object> model = new HashMap<String, Object>();
                    Sighting sighting=Sighting.find(Integer.parseInt(request.params(":id")));
                    model.put("sighting",sighting);
                    model.put("template","templates/sighting.vtl");
                    return new ModelAndView(model,layout);
            },new VelocityTemplateEngine());

        get("/sightings/:id/animal/new", (request,response) -> {
                    Map<String, Object> model = new HashMap<String, Object>();
                    Sighting sighting=Sighting.find(Integer.parseInt(request.params(":id")));
                    model.put("sighting",sighting);
                    model.put("template","templates/new-animal-form.vtl");
                    return new ModelAndView(model,layout);
            },new VelocityTemplateEngine());

        post("/animals", (request,response) ->{
                     Map<String, Object> model = new HashMap<String, Object>();
                     Sighting sighting=Sighting.find(Integer.parseInt(request.queryParams("sightingId")));
                     String name=request.queryParams("name");
                     String ranger=request.queryParams("ranger");
                     String status=request.queryParams("status");
                     Animal animal=new Animal(name,ranger,status);

                     sighting.addAnimal(animal);
                     model.put("sighting",sighting);
                     model.put("template","templates/added.vtl");
                     return new ModelAndView(model,layout);
             },new VelocityTemplateEngine());
}


}
